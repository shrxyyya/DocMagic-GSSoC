# This workflow helps test if Dependabot is working properly
name: Test Dependabot Configuration

on:
  workflow_dispatch:  # Manual trigger only
    inputs:
      create_test_pr:
        description: 'Create a test PR to simulate dependency update'
        required: false
        default: 'false'
        type: boolean

jobs:
  test-dependabot-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Dependabot configuration
        run: |
          echo "Checking if .github/dependabot.yml exists..."
          if [ -f ".github/dependabot.yml" ]; then
            echo "✅ Dependabot configuration found"
            echo "Content preview:"
            head -20 .github/dependabot.yml
          else
            echo "❌ Dependabot configuration not found at .github/dependabot.yml"
            exit 1
          fi

      - name: Check package.json for outdated dependencies
        run: |
          echo "Current dependency status:"
          npm outdated || echo "All dependencies are up to date or npm outdated failed"

      - name: Simulate dependency update (if requested)
        if: github.event.inputs.create_test_pr == 'true'
        run: |
          # This creates a temporary branch to test the workflow
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Create a test branch
          git checkout -b test-dependency-updates
          
          # Make a small change to trigger CI
          echo "# Test dependency update workflow" >> README_TEST.md
          git add README_TEST.md
          git commit -m "test: trigger dependency check workflow"
          git push origin test-dependency-updates

      - name: Check recent Dependabot activity
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const pulls = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
              per_page: 20
            });
            
            const dependabotPRs = pulls.data.filter(pr => pr.user.login === 'dependabot[bot]');
            
            console.log(`Found ${dependabotPRs.length} Dependabot PRs in recent history`);
            
            if (dependabotPRs.length > 0) {
              console.log('Recent Dependabot PRs:');
              dependabotPRs.slice(0, 5).forEach(pr => {
                console.log(`- ${pr.title} (${pr.state}) - ${pr.created_at}`);
              });
            } else {
              console.log('No recent Dependabot PRs found. This might indicate:');
              console.log('1. Dependabot is not enabled');
              console.log('2. All dependencies are up to date');
              console.log('3. Configuration issues');
            }